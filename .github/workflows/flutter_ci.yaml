name: Flutter CI

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
    - main
    - codecov
   
jobs:
  aspell: # REAME.md Spell Checker
    name: Spellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: rojopolis/spellcheck-github-actions@0.27.0
        name: Spellcheck
        with:
          config_path: .spellcheck.yml 
          source_files: README.md CHANGELOG.md notes/Notes.md
          task_name: Markdown
          output_file: spellcheck-output.txt

      # Upload spell check report as a GitHub Artifact
      - uses: actions/upload-artifact@v3
        with:
          name: Spellcheck Report
          path: spellcheck-output.txt

  code_metric: # Check Code Metric
    name: Dart Code Metric
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: dart-code-metrics
        uses: dart-code-checker/dart-code-metrics-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  

  build_web: # Build for Android and Web
    name: Web Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: browser-actions/setup-chrome@latest
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable
          version: 3.3.2
      - name: Install dependencies
        run: flutter pub get
      # - name: Run tests
      #   run: flutter test --platform chrome
      - name: Build Web
        run: flutter build web

  build_android: # Build for Android and Web
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: browser-actions/setup-chrome@latest
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable
          version: 3.3.2
      - name: Install dependencies
        run: flutter pub get
      - name: Run Lint
        run: flutter analyze .
      - name: Build APK
        run: flutter build apk
      - name: Upload APK Artifact    # Upload generated apk to the artifacts.
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

  codecov: # check code coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: 3.7
      - name: Generate coverage report
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true